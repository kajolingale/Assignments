/*1) How to find the maximum occurring character in a given String?
Write an efficient Java program to return the maximum occurring character in the input string
e.g., if the input string is "Java" then the function should return 'a'.
*/


package Assign;
import java.io.*;
import java.util.Scanner;

public class String1 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);
		String s=sc.next();
		String s1=s;
		String res="";
		int max=0, count=0;
		char maxOccurechar = 0;
		for(int k=0; k<=s.length()-1; k++) {
			int c = 0;
			for(int j=0; j<=s1.length()-1; j++){
				if(s.charAt(k)==s1.charAt(j)) {
					c=1;
				}else{
				}
				//System.out.println(c);
			}
			if(c==1 && res.indexOf(s.charAt(k))==-1){
				res=res+s.charAt(k);
			}
		}
		
		for(int i=0; i<res.length(); i++) {
			for(int j=0; j<s.length(); j++) {
				if(res.charAt(i)==s.charAt(j)) {
					count++;
				}
			}
			if(count>max) {
				max=count;
				maxOccurechar=res.charAt(i);
			}
			count=0;
		}
		System.out.println(maxOccurechar);
	}

}



/*2) How to remove all duplicates from a given string?
Write a program to remove all the duplicate characters from a given input String e.g. if given
String is "Java" then output should be "Java". The second or further occurrence of duplicate
should be removed*/
package Assign;

import java.util.Scanner;

public class String3 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);
		String s=sc.nextLine();
		String s1=s;
		String res="";
		//int c=0;
		for(int k=0; k<=s.length()-1; k++) {
			int c = 0;
			for(int j=0; j<=s1.length()-1; j++){
				if(s.charAt(k)==s1.charAt(j)) {
					c=1;
				}else{
				}
				//System.out.println(c);
			}
			if(c==1 && res.indexOf(s.charAt(k))==-1){
				res=res+s.charAt(k);
			}
		}
		
		
		System.out.println(res);
		
		
	}

}



/*4) How to remove characters from the first String which are present in the second String?
Write an efficient Java function that takes two strings as arguments and removes the characters
from the first string which are present in the second string. For example, if the first String "India is
great" and second String is "in" then output should be "da s great"
*/
package Assign;

import java.util.Scanner;

public class string4 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);
		String s=sc.nextLine();
		String s1=sc.nextLine();
		fun(s, s1);
	}
	
	public static void fun(String s, String s1) {
		String res="";
		
		for(int k=0; k<=s.length()-1; k++) {
			int c = 0;
			for(int j=0; j<=s1.length()-1; j++){
				//System.out.println(s.charAt(k)+"  "+s1.charAt(j));
				if(s.charAt(k)==s1.charAt(j)) {
					//System.out.println(s.charAt(k)+"  "+s1.charAt(j));
					c=1;
				}else{
					//c=0;
				}
				//System.out.println(c);
			}
			if(c==0) {
				res=res+s.charAt(k);
				//System.out.println(res+" "+c);
				//System.out.println("**********************");
			}
		}
		System.out.println(res);
		//return res;
	}

}



/*5) How to check if two strings are rotations of each other?
Write an efficient program to test if two given String is a rotation of each other or not e.g. if given
String is "XYZ" and "ZXY" then your function should return true but if the input is "XYZ" and
"YXZ" then return false.*/
package Assign;

import java.util.Scanner;

public class String5 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sc=new Scanner(System.in);
		String str=sc.next();
		String str1=sc.next();
	    String rev="";
		for(int i=str.length()-1; i>=0; i--){
			rev=rev+str.charAt(i);
		}
		//System.out.println(rev);
		
			System.out.println(rev.equals(str1));
		
	}

}
